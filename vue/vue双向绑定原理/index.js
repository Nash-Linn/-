/**
 * vue的双向数据绑定原理是什么？
 *  通过数据劫持和发布订阅者模式来实现，同时利用Object.defineProperty()来劫持
 *  各个属性的setter和getter，在数据发生改变的时候，发布消息给订阅者，触发对应的监听回调
 *  渲染视图
 *  也就是说，数据和视图是同步的，数据发生改变，视图跟着发生变化，视图改变，数据也会发生改变
 *
 *  1. 需要observer的数据对象进行递归遍历，包括子属性对象的属性，都加上setter和getter
 *
 *  2. compile模板解析指令，把模板中的变量替换成数据，然后初始化渲染视图，同时把每个指令对应
 *     的节点绑定上更新函数，添加订阅者，如果数据变化，收到通知，更新视图
 *
 *  3. watcher订阅者是Observer和Compile之间的通信桥梁，作用：
 *     1.在自身实例化的时候往订阅器内添加自己
 *     2.自身要有一个update()方法
 *     3.等待属性变动时，调用自身的update()方法，触发compile中的回调
 *
 *  4.MVVM作为数据绑定的入口，整合了Observer，Compile和watcher三者，通过observer来监听自己的数据变化
 *    通过compile解析模板指令，最后利用watcher把observer和compile联系起来，最终达到数据更新，视图更新，
 *    视图更新，数据更新的效果
 *
 */
